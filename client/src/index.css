@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 0 0% 0%;
  --foreground: 0 0% 95%;
  --border: 0 0% 18%;

  --card: 270 40% 15%;
  --card-foreground: 0 0% 92%;
  --card-border: 0 0% 25%;

  --sidebar: 0 0% 12%;
  --sidebar-foreground: 0 0% 90%;
  --sidebar-border: 0 0% 20%;

  --sidebar-primary: 120 100% 50%;
  --sidebar-primary-foreground: 0 0% 8%;

  --sidebar-accent: 270 40% 20%;
  --sidebar-accent-foreground: 0 0% 85%;

  --sidebar-ring: 120 100% 50%;

  --popover: 270 40% 12%;
  --popover-foreground: 0 0% 88%;
  --popover-border: 0 0% 25%;

  --primary: 120 100% 50%;
  --primary-foreground: 0 0% 8%;

  --secondary: 270 40% 18%;
  --secondary-foreground: 0 0% 82%;

  --muted: 270 40% 12%;
  --muted-foreground: 0 0% 60%;

  --accent: 120 80% 15%;
  --accent-foreground: 120 80% 80%;

  --destructive: 0 84% 35%;
  --destructive-foreground: 0 84% 98%;

  --input: 0 0% 20%;
  --ring: 120 100% 50%;

  --chart-1: 120 100% 25%;
  --chart-2: 270 40% 25%;
  --chart-3: 30 100% 35%;
  --chart-4: 240 50% 30%;
  --chart-5: 300 45% 28%;

  --font-sans: Inter, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Menlo, monospace;
  --font-display: Orbitron, sans-serif;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);
  --shadow-xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);
  --shadow-sm: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);
  --shadow: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);
  --shadow-md: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 2px 4px -1px hsl(0 0% 0% / 0.00);
  --shadow-lg: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 4px 6px -1px hsl(0 0% 0% / 0.00);
  --shadow-xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 8px 10px -1px hsl(0 0% 0% / 0.00);
  --shadow-2xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 0 0% 0%;
  --foreground: 0 0% 95%;
  --border: 0 0% 15%;

  --card: 270 40% 8%;
  --card-foreground: 0 0% 92%;
  --card-border: 0 0% 20%;

  --sidebar: 0 0% 6%;
  --sidebar-foreground: 0 0% 90%;
  --sidebar-border: 0 0% 15%;

  --sidebar-primary: 120 100% 50%;
  --sidebar-primary-foreground: 0 0% 8%;

  --sidebar-accent: 270 40% 12%;
  --sidebar-accent-foreground: 0 0% 85%;

  --sidebar-ring: 120 100% 50%;

  --popover: 270 40% 8%;
  --popover-foreground: 0 0% 88%;
  --popover-border: 0 0% 20%;

  --primary: 120 100% 50%;
  --primary-foreground: 0 0% 8%;

  --secondary: 270 40% 12%;
  --secondary-foreground: 0 0% 82%;

  --muted: 270 40% 8%;
  --muted-foreground: 0 0% 60%;

  --accent: 120 80% 12%;
  --accent-foreground: 120 80% 80%;

  --destructive: 0 84% 40%;
  --destructive-foreground: 0 84% 98%;

  --input: 0 0% 15%;
  --ring: 120 100% 50%;

  --chart-1: 120 100% 65%;
  --chart-2: 270 40% 75%;
  --chart-3: 30 100% 70%;
  --chart-4: 240 50% 70%;
  --chart-5: 300 45% 72%;

  --shadow-2xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);
  --shadow-xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);
  --shadow-sm: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);
  --shadow: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);
  --shadow-md: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 2px 4px -1px hsl(0 0% 0% / 0.00);
  --shadow-lg: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 4px 6px -1px hsl(0 0% 0% / 0.00);
  --shadow-xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 8px 10px -1px hsl(0 0% 0% / 0.00);
  --shadow-2xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);

}

@layer base {
  /* Avoid applying border utilities globally to prevent Tailwind apply errors */
  /* Set a CSS variable for borders instead; components use border-border token via theme */
  * {
    border-color: hsl(var(--border));
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }

  /* Ensure media scales with container width on small screens */
  img, video, canvas, svg {
    max-width: 100%;
    height: auto;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
/* Explosive animations */
@keyframes pulse-glow {
  0%, 100% { 
    box-shadow: 0 0 20px hsl(var(--primary)), 0 0 40px hsl(var(--primary)), 0 0 60px hsl(var(--primary));
    transform: scale(1);
  }
  50% { 
    box-shadow: 0 0 40px hsl(var(--primary)), 0 0 80px hsl(var(--primary)), 0 0 120px hsl(var(--primary));
    transform: scale(1.05);
  }
}

@keyframes explosive-entry {
  0% {
    opacity: 0;
    transform: scale(0.8) translateY(50px);
  }
  50% {
    transform: scale(1.1) translateY(-10px);
  }
  100% {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

@keyframes text-explosion {
  0% {
    opacity: 0;
    transform: scale(0.5) rotate(-5deg);
    filter: blur(4px);
  }
  60% {
    transform: scale(1.1) rotate(2deg);
    filter: blur(0px);
  }
  100% {
    opacity: 1;
    transform: scale(1) rotate(0deg);
    filter: blur(0px);
  }
}

@keyframes diagonal-slide {
  0% {
    opacity: 0;
    transform: translateX(-100px) translateY(50px) skewX(-5deg);
  }
  100% {
    opacity: 1;
    transform: translateX(0) translateY(0) skewX(0deg);
  }
}

@keyframes energy-pulse {
  0%, 100% {
    background: linear-gradient(45deg, hsl(var(--primary)), hsl(var(--primary) / 0.8));
    transform: scale(1);
  }
  50% {
    background: linear-gradient(45deg, hsl(var(--primary) / 0.9), hsl(var(--primary)));
    transform: scale(1.02);
  }
}

/* Explosive CTA animations */
@keyframes lightning-surge {
  0%, 90%, 100% { 
    box-shadow: 0 0 15px hsl(var(--primary) / 0.6);
    transform: scale(1);
    filter: brightness(1);
  }
  5%, 15%, 25% { 
    box-shadow: 
      0 0 30px hsl(var(--primary)), 
      0 0 50px hsl(var(--primary) / 0.8),
      0 0 70px hsl(var(--primary) / 0.4),
      inset 0 0 20px hsl(var(--primary) / 0.3);
    transform: scale(1.08);
    filter: brightness(1.4);
  }
  10%, 20% {
    box-shadow: 0 0 5px hsl(var(--primary) / 0.4);
    transform: scale(0.98);
    filter: brightness(0.9);
  }
}

@keyframes power-surge {
  0%, 100% { 
    box-shadow: 
      0 0 15px hsl(var(--primary)), 
      0 0 25px hsl(var(--primary) / 0.6);
    transform: scale(1);
    border-color: hsl(var(--primary));
  }
  33% { 
    box-shadow: 
      0 0 25px hsl(var(--primary)), 
      0 0 45px hsl(var(--primary) / 0.8),
      0 0 65px hsl(var(--primary) / 0.4);
    transform: scale(1.03);
    border-color: hsl(var(--primary) / 0.9);
  }
  66% {
    box-shadow: 
      0 0 35px hsl(var(--primary)), 
      0 0 55px hsl(var(--primary) / 0.9),
      0 0 85px hsl(var(--primary) / 0.5);
    transform: scale(1.06);
    border-color: hsl(var(--primary));
  }
}

@keyframes ticket-rush {
  0%, 100% { 
    transform: scale(1);
    box-shadow: 0 0 10px hsl(var(--primary));
    background-color: hsl(var(--primary));
  }
  25% { 
    transform: scale(1.02);
    box-shadow: 0 0 20px hsl(var(--primary)), 0 0 30px hsl(var(--primary) / 0.6);
  }
  50% { 
    transform: scale(1.05);
    box-shadow: 0 0 30px hsl(var(--primary)), 0 0 50px hsl(var(--primary) / 0.7);
    background-color: hsl(var(--primary) / 0.95);
  }
  75% { 
    transform: scale(1.02);
    box-shadow: 0 0 20px hsl(var(--primary)), 0 0 40px hsl(var(--primary) / 0.6);
  }
}

@keyframes energy-explosion {
  0%, 100% { 
    box-shadow: 
      0 0 20px hsl(var(--primary)), 
      0 0 40px hsl(var(--primary) / 0.6),
      0 0 60px hsl(var(--primary) / 0.3);
    transform: scale(1);
    filter: brightness(1) saturate(1);
  }
  50% { 
    box-shadow: 
      0 0 40px hsl(var(--primary)), 
      0 0 80px hsl(var(--primary) / 0.8),
      0 0 120px hsl(var(--primary) / 0.5),
      0 0 160px hsl(var(--primary) / 0.3),
      inset 0 0 30px hsl(var(--primary) / 0.2);
    transform: scale(1.08);
    filter: brightness(1.3) saturate(1.2);
  }
}

@keyframes floating-element {
  0%, 100% {
    transform: translateY(0px) rotate(0deg);
  }
  50% {
    transform: translateY(-20px) rotate(2deg);
  }
}

/* Utility classes for animations */
.explosive-entry {
  animation: explosive-entry 1s ease-out forwards;
}

.text-explosion {
  animation: text-explosion 1.2s ease-out forwards;
}

.diagonal-slide {
  animation: diagonal-slide 0.8s ease-out forwards;
}

.pulse-glow {
  animation: pulse-glow 2s infinite;
}

.energy-pulse {
  animation: energy-pulse 3s infinite;
}

.floating {
  animation: floating-element 4s ease-in-out infinite;
}

/* Explosive CTA utility classes */
.lightning-surge {
  animation: lightning-surge 4s infinite;
}

.power-surge {
  animation: power-surge 2.5s infinite;
}

.ticket-rush {
  animation: ticket-rush 2s infinite;
}

.energy-explosion {
  animation: energy-explosion 3s infinite;
}

/* Stagger delays for sequential animations */
.delay-100 { animation-delay: 0.1s; }
.delay-200 { animation-delay: 0.2s; }
.delay-300 { animation-delay: 0.3s; }
.delay-400 { animation-delay: 0.4s; }
.delay-500 { animation-delay: 0.5s; }

/* Diagonal section utilities */
.diagonal-section {
  position: relative;
  transform: skewY(-2deg);
  margin-top: -100px;
  padding-top: 150px;
  padding-bottom: 100px;
}

.diagonal-section > * {
  transform: skewY(2deg);
}

.diagonal-reverse {
  transform: skewY(2deg);
}

.diagonal-reverse > * {
  transform: skewY(-2deg);
}

.overlapping-section {
  position: relative;
  z-index: 2;
  margin-top: -80px;
}

.section-flow::before {
  content: '';
  position: absolute;
  top: -50px;
  left: 0;
  right: 0;
  height: 100px;
  background: linear-gradient(45deg, transparent 40%, currentColor 40%, currentColor 60%, transparent 60%);
  opacity: 0.1;
}

/* Dynamic grid layouts with explosive effects */
.dynamic-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
  transform: perspective(1000px) rotateX(5deg);
}

.dynamic-grid > * {
  transform: rotateX(-5deg);
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.dynamic-grid > *:hover {
  transform: rotateX(-2deg) scale(1.05) translateZ(20px);
  filter: brightness(1.2) saturate(1.3);
}

/* Explosive particle effects */
@keyframes particle-burst {
  0% {
    opacity: 1;
    transform: scale(0) translateY(0) rotate(0deg);
  }
  50% {
    opacity: 0.8;
    transform: scale(1.5) translateY(-100px) rotate(180deg);
  }
  100% {
    opacity: 0;
    transform: scale(0.5) translateY(-200px) rotate(360deg);
  }
}

.particle-burst::before,
.particle-burst::after {
  content: '';
  position: absolute;
  width: 8px;
  height: 8px;
  background: var(--primary);
  border-radius: 50%;
  animation: particle-burst 2s infinite;
  pointer-events: none;
}

.particle-burst::before {
  top: 20%;
  left: 10%;
  animation-delay: 0.3s;
}

.particle-burst::after {
  top: 60%;
  right: 15%;
  animation-delay: 0.7s;
  background: rgba(0, 255, 0, 0.6);
}

/* Explosive text effects */
@keyframes text-explosion {
  0% {
    transform: scale(1) rotate(0deg);
    text-shadow: 0 0 20px currentColor;
  }
  50% {
    transform: scale(1.02) rotate(-0.5deg);
    text-shadow: 0 0 40px currentColor, 0 0 80px currentColor;
  }
  100% {
    transform: scale(1) rotate(0deg);
    text-shadow: 0 0 20px currentColor;
  }
}

.text-explosion {
  animation: text-explosion 3s ease-in-out infinite;
}

/* Glitch effect for dramatic text */
@keyframes glitch {
  0%, 100% {
    transform: translate(0);
    filter: hue-rotate(0deg);
  }
  20% {
    transform: translate(-2px, 2px);
    filter: hue-rotate(90deg);
  }
  40% {
    transform: translate(-2px, -2px);
    filter: hue-rotate(180deg);
  }
  60% {
    transform: translate(2px, 2px);
    filter: hue-rotate(270deg);
  }
  80% {
    transform: translate(2px, -2px);
    filter: hue-rotate(360deg);
  }
}

.glitch-effect {
  animation: glitch 0.3s;
}

.glitch-effect:hover {
  animation: glitch 0.2s infinite;
}

/* Energy wave effects */
@keyframes energy-wave {
  0% {
    transform: translateX(-100%) skewX(-15deg);
    opacity: 0;
  }
  50% {
    opacity: 0.8;
  }
  100% {
    transform: translateX(100%) skewX(-15deg);
    opacity: 0;
  }
}

.energy-wave {
  position: relative;
  overflow: hidden;
}

.energy-wave::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(0, 255, 0, 0.3), transparent);
  animation: energy-wave 2s infinite;
  pointer-events: none;
  z-index: 1;
}

/* Explosive card hover effects */
.explosive-card {
  position: relative;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  transform-style: preserve-3d;
}

.explosive-card:hover {
  transform: scale(1.08) rotateY(5deg) rotateX(5deg);
  filter: brightness(1.3) contrast(1.1);
  box-shadow: 
    0 20px 40px rgba(0, 255, 0, 0.3),
    0 0 60px rgba(0, 255, 0, 0.2),
    inset 0 0 20px rgba(0, 255, 0, 0.1);
}

.explosive-card::before {
  content: '';
  position: absolute;
  inset: -2px;
  background: linear-gradient(45deg, transparent, var(--primary), transparent, var(--primary));
  border-radius: inherit;
  opacity: 0;
  transition: opacity 0.3s;
  z-index: -1;
  animation: rotate 3s linear infinite;
}

.explosive-card:hover::before {
  opacity: 0.7;
}

@keyframes rotate {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Scroll-triggered animations with accessibility support */
@media (prefers-reduced-motion: no-preference) {
  /* Explosive reveal animation - dramatic entrance */
  .scroll-reveal {
    opacity: 0;
    transform: translateY(80px) scale(0.7) rotateX(45deg);
    transition: all 1.2s cubic-bezier(0.16, 1, 0.3, 1);
    filter: blur(8px);
  }

  .scroll-reveal.revealed {
    opacity: 1;
    transform: translateY(0) scale(1) rotateX(0);
    filter: blur(0px);
  }

  /* Explosive slide from left - dramatic skew and movement */
  .scroll-slide-left {
    opacity: 0;
    transform: translateX(-200px) skewX(-15deg) scale(0.8) rotateY(-30deg);
    transition: all 1.4s cubic-bezier(0.16, 1, 0.3, 1);
    filter: blur(6px);
  }

  .scroll-slide-left.revealed {
    opacity: 1;
    transform: translateX(0) skewX(0) scale(1) rotateY(0);
    filter: blur(0px);
  }

  /* Explosive slide from right - dramatic skew and movement */
  .scroll-slide-right {
    opacity: 0;
    transform: translateX(200px) skewX(15deg) scale(0.8) rotateY(30deg);
    transition: all 1.4s cubic-bezier(0.16, 1, 0.3, 1);
    filter: blur(6px);
  }

  .scroll-slide-right.revealed {
    opacity: 1;
    transform: translateX(0) skewX(0) scale(1) rotateY(0);
    filter: blur(0px);
  }

  /* Explosive scale-up - massive dramatic entrance */
  .scroll-scale-up {
    opacity: 0;
    transform: scale(0.3) rotate(-25deg) translateY(50px);
    transition: all 1.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    filter: blur(10px) brightness(0.5);
  }

  .scroll-scale-up.revealed {
    opacity: 1;
    transform: scale(1) rotate(0) translateY(0);
    filter: blur(0px) brightness(1);
  }

  /* Explosive bounce-in - super dramatic bounce effect */
  .scroll-bounce-in {
    opacity: 0;
    transform: translateY(150px) scale(0.2) rotateZ(-180deg);
    transition: all 1.8s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    filter: blur(12px) saturate(0.3);
  }

  .scroll-bounce-in.revealed {
    opacity: 1;
    transform: translateY(0) scale(1) rotateZ(0);
    filter: blur(0px) saturate(1);
  }

  /* Enhanced stagger delays for dramatic effect */
  .scroll-delay-100 { transition-delay: 0.15s; }
  .scroll-delay-200 { transition-delay: 0.3s; }
  .scroll-delay-300 { transition-delay: 0.45s; }
  .scroll-delay-400 { transition-delay: 0.6s; }
  .scroll-delay-500 { transition-delay: 0.75s; }
  .scroll-delay-600 { transition-delay: 0.9s; }
}

/* Fallback for users who prefer reduced motion */
@media (prefers-reduced-motion: reduce) {
  .scroll-reveal,
  .scroll-slide-left,
  .scroll-slide-right,
  .scroll-scale-up,
  .scroll-bounce-in {
    opacity: 0.6;
    transition: opacity 0.3s ease;
  }

  .scroll-reveal.revealed,
  .scroll-slide-left.revealed,
  .scroll-slide-right.revealed,
  .scroll-scale-up.revealed,
  .scroll-bounce-in.revealed {
    opacity: 1;
  }

  .scroll-delay-100,
  .scroll-delay-200,
  .scroll-delay-300,
  .scroll-delay-400,
  .scroll-delay-500,
  .scroll-delay-600 {
    transition-delay: 0s;
  }
}

@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}